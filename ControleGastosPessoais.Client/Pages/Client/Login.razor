@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<link href="css/login.css" rel="stylesheet" />

<video autoplay loop muted playsinline class="background-video">
    <source src="videos/background.mp4" type="video/mp4" />
</video>
<div class="video-overlay"></div>

<div class="login-wrapper">
    <div class="login-card">
        <button class="btn-voltar" @onclick="@(() => NavigationManager.NavigateTo("/"))">← Voltar</button>

        <h1 class="login-title">Login</h1>

@*         @if (ShowErrors)
        {
            <div class="alert alert-danger" role="alert">
                <p>@Error</p>
            </div>
        } *@

        @if (!string.IsNullOrEmpty(Error))
        {
            <MudAlert Severity="Severity.Error" Dense="true" Elevation="0" Class="my-2">
                @Error
            </MudAlert>
        }

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText Id="email" class="form-control input-glow" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Senha</label>
                <InputText Id="password" type="password" class="form-control input-glow" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button type="submit" class="btn-neon">Entrar</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            Error = result.Error ?? "Erro ao realizar login";
            ShowErrors = true;
        }
    }
}
