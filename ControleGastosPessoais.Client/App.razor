@using Microsoft.AspNetCore.Components.Authorization
@using ControleGastosPessoais.Client.Pages
@inject NavigationManager Nav

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            @if (RequiresAuthorization(routeData.PageType))
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized>
                        <RedirectToLogin />
                    </NotAuthorized>
                </AuthorizeRouteView>
            }
            else
            {
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            }
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Página não encontrada.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private static bool RequiresAuthorization(Type pageType)
    {
        return Attribute.IsDefined(pageType, typeof(Microsoft.AspNetCore.Authorization.AuthorizeAttribute));
    }
}
